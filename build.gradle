/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/5.1.1/userguide/java_library_plugin.html
 */
/*

jar {
    manifest {
        attributes 'Main-Class': 'edu.handong.csee.isel.Main'
    }
}

bootJar {
   jar.enabled = true // 빌드시 jar 을 실행
}*/
 // Include dependent libraries in archive.



repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
	flatDir {
		dirs 'lib'
	}
}


apply plugin: 'application'
mainClassName = "edu.handong.csee.isel.Main"


sourceCompatibility = 11
targetCompatibility = 11


dependencies {

	// https://mvnrepository.com/artifact/com.github.gumtreediff/core
	runtime group: 'com.github.gumtreediff', name: 'core', version: '2.1.0'

	// https://mvnrepository.com/artifact/com.github.gumtreediff/gen.jdt
	compile group: 'com.github.gumtreediff', name: 'gen.jdt', version: '2.1.0'

	// https://mvnrepository.com/artifact/com.github.gumtreediff/client
	compile group: 'com.github.gumtreediff', name: 'client', version: '2.1.0'

	// https://mvnrepository.com/artifact/org.apache.commons/commons-csv
	compile group: 'org.apache.commons', name: 'commons-csv', version: '1.5'

	// https://mvnrepository.com/artifact/org.jsoup/jsoup
	compile group: 'org.jsoup', name: 'jsoup', version: '1.11.3'
	
	// https://mvnrepository.com/artifact/net.sf.supercsv/super-csv
	compile group: 'net.sf.supercsv', name: 'super-csv', version: '2.4.0'
	
	// https://mvnrepository.com/artifact/org.slf4j/slf4j-api
	compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'

	// https://mvnrepository.com/artifact/org.eclipse.jgit/org.eclipse.jgit
	compile group: 'org.eclipse.jgit', name: 'org.eclipse.jgit', version: '5.6.0.201912101111-r'


	     // This dependency is exported to consumers, that is to say found on their compile classpath.
	    //api 'org.apache.commons:commons-math3:3.6.1'
	
	    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
	    implementation 'com.google.guava:guava:26.0-jre'
	
	    // Use JUnit test framework
	    testImplementation 'junit:junit:4.12'
    
    // https://mvnrepository.com/artifact/commons-cli/commons-cli
	compile group: 'commons-cli', name: 'commons-cli', version: '1.4' // remove
	
	// https://mvnrepository.com/artifact/org.eclipse.jdt/org.eclipse.jdt.core
	
	// https://mvnrepository.com/artifact/commons-io/commons-io
	compile group: 'commons-io', name: 'commons-io', version: '2.5'

    compile group: 'org.eclipse.jdt', name: 'org.eclipse.jdt.core', version: '3.24.0'

	// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'

	// https://mvnrepository.com/artifact/org.apache.commons/commons-collections4
	compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
	
	compile 'info.picocli:picocli:4.5.0'
    compileOnly 'info.picocli:picocli-codegen:4.5.0'
    
    // https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
    compile group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.8.0'
    
    // https://mvnrepository.com/artifact/com.squareup.retrofit2/retrofit
    compile group: 'com.squareup.retrofit2', name: 'retrofit', version: '2.9.0'
    
    // https://mvnrepository.com/artifact/com.squareup.retrofit2/converter-gson
    compile group: 'com.squareup.retrofit2', name: 'converter-gson', version: '2.9.0'

    // weka 3.7.9
    //  compile 'nz.ac.waikato.cms.weka:weka-dev:3.7.9'
//    compile group: 'nz.ac.waikato.cms.weka', name: 'weka-dev', version: '3.9.3'
    // https://mvnrepository.com/artifact/nz.ac.waikato.cms.weka/weka-stable
    compile group: 'nz.ac.waikato.cms.weka', name: 'weka-stable', version: '3.8.5'


}
/*
jar {
  manifest { 
    attributes "Main-Class": "edu.handong.csee.isel.Main"
  }  

  from {
    configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
  }
}*/
/*
jar {
  manifest {
    attributes(
      'Main-Class': "edu.handong.csee.isel.Main",
    )
  }
}

task fatJar(type: Jar) {
  manifest.from jar.manifest
  classifier = 'all'
  from {
    (configurations.compile.findAll { !it.path.endsWith(".pom") }).collect {
    it.isDirectory() ? it : zipTree(it)
}
  } {
    exclude "META-INF/*.SF"
    exclude "META-INF/*.DSA"
    exclude "META-INF/*.RSA"
  } 
  with jar
}

artifacts {
    archives fatJar
}*/

task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'edu.handong.csee.isel.Main'
    }
    baseName = project.name
    
    from ((configurations.compile.findAll { !it.path.endsWith(".pom") }).collect { entry -> zipTree(entry) }) {
        exclude 'META-INF/MANIFEST.MF'
        exclude 'META-INF/*.SF'
        exclude 'META-INF/*.DSA'
        exclude 'META-INF/*.RSA'
    }
    with jar
}
